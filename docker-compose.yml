version: "3.9"

services:
  app:
    &app
    container_name: api
    build:
      context: .
      dockerfile: ./docker/Dockerfile
     # args:
      #  APP_USER_ID: ${APP_USER_ID}
    env_file: .env
    volumes:
      - .:/app
    tmpfs:
      - /tmp
    ports:
      - "3000:3000"
    depends_on:
      - development_db
      - test_db
    networks:
      - api_private_network
  
    command: [ "bundle","exec", "rails", "server", "-b", "0.0.0.0", "-p", "3000","-e", "development"]

  development_db:
    &development_db
    container_name: api_development_db
    image: postgres:alpine
    env_file: .env
    volumes:
      - development_db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DEVELOPMENT_DB_NAME}
      POSTGRES_USER: ${DEVELOPMENT_DB_USERNAME}
      POSTGRES_PASSWORD: ${DEVELOPMENT_DB_PASSWORD}
    networks:
      - api_private_network
    restart: always

  test_db:
    <<: *development_db
    container_name: api_test_db
    environment:
      POSTGRES_DB: ${TEST_DB_NAME}
      POSTGRES_USER: ${TEST_DB_USERNAME}
      POSTGRES_PASSWORD: ${TEST_DB_PASSWORD}
    volumes:
      - test_db:/var/lib/postgresql/data


volumes:
  bundle:
  rails_cache:
  node_modules:
  development_db:
  test_db:

networks:
  api_private_network:
    external: true
